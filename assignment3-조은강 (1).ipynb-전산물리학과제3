{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# assignment3.ipynb\n",
    "2018016037 물리학과 조은강\n",
    "다음의 두 데이터에 대한 회귀 분석을 하여라.\n",
    "\n",
    "\n",
    "1.Boston House Price\n",
    "2.Diabetes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_boston\n",
    "from sklearn.linear_model import LinearRegression, Ridge, Lasso"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1.Boston House Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "boston = load_boston()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([6.320e-03, 1.800e+01, 2.310e+00, 0.000e+00, 5.380e-01, 6.575e+00,\n",
       "       6.520e+01, 4.090e+00, 1.000e+00, 2.960e+02, 1.530e+01, 3.969e+02,\n",
       "       4.980e+00])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=boston.data\n",
    "y=boston.target\n",
    "x[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lasso(alpha=10, copy_X=True, fit_intercept=True, max_iter=1000, normalize=False,\n",
       "      positive=False, precompute=False, random_state=None, selection='cyclic',\n",
       "      tol=0.0001, warm_start=False)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg=LinearRegression()\n",
    "lasso_reg=Lasso(alpha=10)\n",
    "\n",
    "reg.fit(x,y)\n",
    "lasso_reg.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRIM: -0.108011\n",
      "ZN: 0.046420\n",
      "INDUS: 0.020559\n",
      "CHAS: 2.686734\n",
      "NOX: -17.766611\n",
      "RM: 3.809865\n",
      "AGE: 0.000692\n",
      "DIS: -1.475567\n",
      "RAD: 0.306049\n",
      "TAX: -0.012335\n",
      "PTRATIO: -0.952747\n",
      "B: 0.009312\n",
      "LSTAT: -0.524758\n"
     ]
    }
   ],
   "source": [
    "for a, b in zip(boston.feature_names, reg.coef_):\n",
    "    print(\"%s: %f\" %(a,b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRIM: -0.000000\n",
      "ZN: 0.026146\n",
      "INDUS: -0.000000\n",
      "CHAS: 0.000000\n",
      "NOX: 0.000000\n",
      "RM: 0.000000\n",
      "AGE: 0.000000\n",
      "DIS: -0.000000\n",
      "RAD: 0.000000\n",
      "TAX: -0.009282\n",
      "PTRATIO: -0.000000\n",
      "B: 0.007496\n",
      "LSTAT: -0.564038\n"
     ]
    }
   ],
   "source": [
    "for a, b in zip(boston.feature_names, lasso_reg.coef_):\n",
    "     print(\"%s: %f\" %(a,b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "a=[i[6] for i in x] #6은 나이 9는 세금\n",
    "X=np.array(a,int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures \n",
    "poly_features = PolynomialFeatures(degree=2, include_bias=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "a=X.reshape(-1,1)\n",
    "X_poly2 = poly_features.fit_transform(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(26.61716028916981, array([ 0.06672571, -0.00158705]))"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "reg2=LinearRegression() \n",
    "reg2.fit(X_poly2,y)\n",
    "reg2.intercept_, reg2.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([-0.12301055]), 30.916729258419938)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg1=LinearRegression()\n",
    "reg1.fit(a,y)\n",
    "reg1.coef_, reg1.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly_features = PolynomialFeatures(degree=40, include_bias=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=X.reshape(-1,1)\n",
    "X_poly40 = poly_features.fit_transform(a)\n",
    "reg40=LinearRegression() \n",
    "reg40.fit(X_poly40,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x253f5208e88>]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(X,y,'o');\n",
    "plt.plot(X_poly2[:,0],reg2.predict(X_poly2),'.')\n",
    "plt.plot(X,reg1.predict(a),'-')\n",
    "plt.plot(X_poly40[:,0],reg40.predict(X_poly40),'.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import Lasso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Administrator\\anaconda3\\lib\\site-packages\\sklearn\\linear_model\\_coordinate_descent.py:476: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 17970.2633604226, tolerance: 4.2716295415019765\n",
      "  positive)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Lasso(alpha=0.01, copy_X=True, fit_intercept=True, max_iter=1000,\n",
       "      normalize=False, positive=False, precompute=False, random_state=None,\n",
       "      selection='cyclic', tol=0.0001, warm_start=False)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lasso_reg = Lasso(alpha=0.01)\n",
    "lasso_reg.fit(X_poly40,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x253f26bc6c8>]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(X,y,'o');\n",
    "plt.plot(X_poly40[:,0],reg40.predict(X_poly40),'.')\n",
    "plt.plot(X_poly40[:,0],lasso_reg.predict(X_poly40),'.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2.Diabetes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_diabetes\n",
    "from sklearn.linear_model import LinearRegression, Ridge, Lasso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "dia = load_diabetes()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.03807591,  0.05068012,  0.06169621,  0.02187235, -0.0442235 ,\n",
       "       -0.03482076, -0.04340085, -0.00259226,  0.01990842, -0.01764613])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=dia.data\n",
    "y=dia.target\n",
    "x[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lasso(alpha=10, copy_X=True, fit_intercept=True, max_iter=1000, normalize=False,\n",
       "      positive=False, precompute=False, random_state=None, selection='cyclic',\n",
       "      tol=0.0001, warm_start=False)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg=LinearRegression()\n",
    "lasso_reg=Lasso(alpha=10)\n",
    "\n",
    "reg.fit(x,y)\n",
    "lasso_reg.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age: -10.012198\n",
      "sex: -239.819089\n",
      "bmi: 519.839787\n",
      "bp: 324.390428\n",
      "s1: -792.184162\n",
      "s2: 476.745838\n",
      "s3: 101.044570\n",
      "s4: 177.064176\n",
      "s5: 751.279321\n",
      "s6: 67.625386\n"
     ]
    }
   ],
   "source": [
    "for a, b in zip(dia.feature_names, reg.coef_):\n",
    "    print(\"%s: %f\" %(a,b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age: 0.000000\n",
      "sex: 0.000000\n",
      "bmi: 0.000000\n",
      "bp: 0.000000\n",
      "s1: 0.000000\n",
      "s2: 0.000000\n",
      "s3: -0.000000\n",
      "s4: 0.000000\n",
      "s5: 0.000000\n",
      "s6: 0.000000\n"
     ]
    }
   ],
   "source": [
    "for a, b in zip(dia.feature_names, lasso_reg.coef_):\n",
    "    print(\"%s: %f\" %(a,b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "a=[i[0] for i in x] #0은 나이 1은 섹스\n",
    "X=np.array(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures \n",
    "poly_features = PolynomialFeatures(degree=2, include_bias=False)\n",
    "\n",
    "a=X.reshape(-1,1)\n",
    "X_poly2 = poly_features.fit_transform(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(150.41970168545706, array([312.49148174, 757.49185503]))"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "reg2=LinearRegression() \n",
    "reg2.fit(X_poly2,y)\n",
    "reg2.intercept_, reg2.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([304.18307453]), 152.13348416289605)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg1=LinearRegression()\n",
    "reg1.fit(a,y)\n",
    "reg1.coef_, reg1.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly_features = PolynomialFeatures(degree=40, include_bias=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=X.reshape(-1,1)\n",
    "X_poly40 = poly_features.fit_transform(a)\n",
    "reg40=LinearRegression() \n",
    "reg40.fit(X_poly40,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x253f519ae08>]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(X,y,'o');\n",
    "plt.plot(X_poly2[:,0],reg2.predict(X_poly2),'.')\n",
    "plt.plot(X,reg1.predict(a),'-')\n",
    "plt.plot(X_poly40[:,0],reg40.predict(X_poly40),'.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import Lasso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lasso(alpha=0.01, copy_X=True, fit_intercept=True, max_iter=1000,\n",
       "      normalize=False, positive=False, precompute=False, random_state=None,\n",
       "      selection='cyclic', tol=0.0001, warm_start=False)"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lasso_reg = Lasso(alpha=0.01)\n",
    "lasso_reg.fit(X_poly40,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x253f3c8ef88>]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(X,y,'.','');\n",
    "plt.plot(X_poly40[:,0],reg40.predict(X_poly40),'o' )\n",
    "plt.plot(X_poly40[:,0],lasso_reg.predict(X_poly40),'.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
